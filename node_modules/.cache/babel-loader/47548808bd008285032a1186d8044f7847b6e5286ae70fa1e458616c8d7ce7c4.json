{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\PORTFOLIO\\\\portfolio\\\\src\\\\components\\\\maze.js\",\n  _s = $RefreshSig$();\n// src/components/maze.js\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Maze = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Maze dimensions and configuration\n    const cellSize = 20; // Reduced cell size for a smaller maze\n    const cols = 10; // Reduced number of columns\n    const rows = 8; // Reduced number of rows\n    const playerPosition = {\n      x: 0,\n      y: 0\n    };\n\n    // Draw initial maze grid\n    const drawMaze = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      context.fillStyle = \"#111\";\n      for (let y = 0; y < rows; y++) {\n        for (let x = 0; x < cols; x++) {\n          // Draw cell walls based on your maze structure\n          context.strokeRect(x * cellSize, y * cellSize, cellSize, cellSize);\n        }\n      }\n    };\n\n    // Draw player position\n    const drawPlayer = () => {\n      context.fillStyle = \"red\";\n      context.fillRect(playerPosition.x * cellSize, playerPosition.y * cellSize, cellSize, cellSize);\n    };\n\n    // Handle movement\n    const movePlayer = (dx, dy) => {\n      const newX = playerPosition.x + dx;\n      const newY = playerPosition.y + dy;\n\n      // Check boundaries and move player\n      if (newX >= 0 && newX < cols && newY >= 0 && newY < rows) {\n        playerPosition.x = newX;\n        playerPosition.y = newY;\n        drawMaze();\n        drawPlayer();\n      }\n    };\n\n    // Arrow key event listener\n    const handleKeyDown = e => {\n      switch (e.key) {\n        case \"ArrowUp\":\n          movePlayer(0, -1);\n          break;\n        case \"ArrowDown\":\n          movePlayer(0, 1);\n          break;\n        case \"ArrowLeft\":\n          movePlayer(-1, 0);\n          break;\n        case \"ArrowRight\":\n          movePlayer(1, 0);\n          break;\n        default:\n          break;\n      }\n    };\n\n    // Initial draw\n    drawMaze();\n    drawPlayer();\n\n    // Event listener for keydown\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on component unmount\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"maze-game\",\n    style: {\n      width: '220px',\n      height: '180px',\n      border: '2px solid black',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Maze Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"mazeCanvas\",\n      width: \"200\",\n      height: \"160\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use arrow keys to navigate the maze.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Maze, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Maze;\nexport default Maze;\nvar _c;\n$RefreshReg$(_c, \"Maze\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Maze","_s","canvasRef","canvas","current","context","getContext","cellSize","cols","rows","playerPosition","x","y","drawMaze","clearRect","width","height","fillStyle","strokeRect","drawPlayer","fillRect","movePlayer","dx","dy","newX","newY","handleKeyDown","e","key","window","addEventListener","removeEventListener","id","style","border","position","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/PORTFOLIO/portfolio/src/components/maze.js"],"sourcesContent":["// src/components/maze.js\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst Maze = () => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        \r\n        // Maze dimensions and configuration\r\n        const cellSize = 20; // Reduced cell size for a smaller maze\r\n        const cols = 10; // Reduced number of columns\r\n        const rows = 8; // Reduced number of rows\r\n        const playerPosition = { x: 0, y: 0 };\r\n\r\n        // Draw initial maze grid\r\n        const drawMaze = () => {\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            context.fillStyle = \"#111\";\r\n\r\n            for (let y = 0; y < rows; y++) {\r\n                for (let x = 0; x < cols; x++) {\r\n                    // Draw cell walls based on your maze structure\r\n                    context.strokeRect(x * cellSize, y * cellSize, cellSize, cellSize);\r\n                }\r\n            }\r\n        };\r\n\r\n        // Draw player position\r\n        const drawPlayer = () => {\r\n            context.fillStyle = \"red\";\r\n            context.fillRect(\r\n                playerPosition.x * cellSize,\r\n                playerPosition.y * cellSize,\r\n                cellSize,\r\n                cellSize\r\n            );\r\n        };\r\n\r\n        // Handle movement\r\n        const movePlayer = (dx, dy) => {\r\n            const newX = playerPosition.x + dx;\r\n            const newY = playerPosition.y + dy;\r\n\r\n            // Check boundaries and move player\r\n            if (newX >= 0 && newX < cols && newY >= 0 && newY < rows) {\r\n                playerPosition.x = newX;\r\n                playerPosition.y = newY;\r\n                drawMaze();\r\n                drawPlayer();\r\n            }\r\n        };\r\n\r\n        // Arrow key event listener\r\n        const handleKeyDown = (e) => {\r\n            switch (e.key) {\r\n                case \"ArrowUp\":\r\n                    movePlayer(0, -1);\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    movePlayer(0, 1);\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                    movePlayer(-1, 0);\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    movePlayer(1, 0);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        // Initial draw\r\n        drawMaze();\r\n        drawPlayer();\r\n\r\n        // Event listener for keydown\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n        // Cleanup event listener on component unmount\r\n        return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"maze-game\" style={{ width: '220px', height: '180px', border: '2px solid black', position: 'relative' }}>\r\n            <h2 style={{ textAlign: 'center' }}>Maze Game</h2>\r\n            <canvas ref={canvasRef} id=\"mazeCanvas\" width=\"200\" height=\"160\"></canvas>\r\n            <div id=\"controls\" style={{ textAlign: 'center' }}>\r\n                <p>Use arrow keys to navigate the maze.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Maze;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}