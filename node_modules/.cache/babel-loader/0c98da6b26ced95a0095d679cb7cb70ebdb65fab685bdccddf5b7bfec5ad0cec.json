{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\PORTFOLIO\\\\portfolio\\\\src\\\\components\\\\Skills.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './SkillsSlideshow.css'; // Import the CSS for styling and animations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillsSlideshow = () => {\n  _s();\n  const skillsData = {\n    'Technical Skills': ['Programming Languages: C++, Java, Python', 'Web Development: HTML5, CSS, JavaScript, React.js, Node.js, Flask', 'Data Science: Machine Learning, Natural Language Processing (NLP), Data Analysis', 'Simulation and Modeling: Algorithms (Dijkstra’s, A*), Augmented Reality (AR), Computer Vision (CV)', 'Blockchain and Cryptography: Quantum-Resilient Cryptography, Blockchain, Zero-Knowledge Proofs (ZKP)', 'Energy Management: Predictive Analytics, Smart Home Technology, Internet of Things (IoT), Real-Time Data Processing', 'AI and Machine Learning: Generative AI, Transformer Models, Vision Transformers (ViT), Generative Adversarial Networks (GANs)'],\n    'Tools and Technologies': ['Cloud Computing: AWS, Azure, GCP', 'DevOps: Docker, Kubernetes, Git', 'Databases: SQL, NoSQL (MongoDB)', 'NLP Libraries: SpaCy, NLTK', 'Data Preprocessing: TfidfVectorizer, MultiOutputClassifier'],\n    'Soft Skills': ['Analytical Thinking', 'Communication', 'Team Collaboration', 'Problem Solving', 'Time Management', 'Adaptability', 'Leadership']\n  };\n  const [currentSkillIndex, setCurrentSkillIndex] = useState(0);\n  const [currentCategoryIndex, setCurrentCategoryIndex] = useState(0);\n  const categories = Object.keys(skillsData);\n  useEffect(() => {\n    const totalSkills = categories.reduce((accum, category) => accum + skillsData[category].length, 0);\n    const intervalId = setInterval(() => {\n      if (currentSkillIndex < totalSkills - 1) {\n        setCurrentSkillIndex(prev => prev + 1);\n      } else {\n        setCurrentSkillIndex(0); // Restart the slideshow\n        setCurrentCategoryIndex(prev => (prev + 1) % categories.length); // Change category\n      }\n    }, 3000); // Change slide every 3 seconds\n\n    return () => clearInterval(intervalId);\n  }, [currentSkillIndex]);\n  const getCurrentSkill = () => {\n    let cumulativeIndex = 0;\n    for (const category of categories) {\n      const items = skillsData[category];\n      if (currentSkillIndex < cumulativeIndex + items.length) {\n        return {\n          skill: items[currentSkillIndex - cumulativeIndex],\n          category\n        };\n      }\n      cumulativeIndex += items.length;\n    }\n    return {\n      skill: '',\n      category: ''\n    };\n  };\n  const {\n    skill,\n    category\n  } = getCurrentSkill();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"slideshow-title\",\n      children: \"Skills Showcase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshow-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"category\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"skill\",\n        children: skill\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(SkillsSlideshow, \"3ZTVEleb4k55x8u+Mun7zr9Fp+A=\");\n_c = SkillsSlideshow;\nexport default SkillsSlideshow;\nvar _c;\n$RefreshReg$(_c, \"SkillsSlideshow\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SkillsSlideshow","_s","skillsData","currentSkillIndex","setCurrentSkillIndex","currentCategoryIndex","setCurrentCategoryIndex","categories","Object","keys","totalSkills","reduce","accum","category","length","intervalId","setInterval","prev","clearInterval","getCurrentSkill","cumulativeIndex","items","skill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/PORTFOLIO/portfolio/src/components/Skills.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './SkillsSlideshow.css'; // Import the CSS for styling and animations\r\n\r\nconst SkillsSlideshow = () => {\r\n    const skillsData = {\r\n        'Technical Skills': [\r\n            'Programming Languages: C++, Java, Python',\r\n            'Web Development: HTML5, CSS, JavaScript, React.js, Node.js, Flask',\r\n            'Data Science: Machine Learning, Natural Language Processing (NLP), Data Analysis',\r\n            'Simulation and Modeling: Algorithms (Dijkstra’s, A*), Augmented Reality (AR), Computer Vision (CV)',\r\n            'Blockchain and Cryptography: Quantum-Resilient Cryptography, Blockchain, Zero-Knowledge Proofs (ZKP)',\r\n            'Energy Management: Predictive Analytics, Smart Home Technology, Internet of Things (IoT), Real-Time Data Processing',\r\n            'AI and Machine Learning: Generative AI, Transformer Models, Vision Transformers (ViT), Generative Adversarial Networks (GANs)',\r\n        ],\r\n        'Tools and Technologies': [\r\n            'Cloud Computing: AWS, Azure, GCP',\r\n            'DevOps: Docker, Kubernetes, Git',\r\n            'Databases: SQL, NoSQL (MongoDB)',\r\n            'NLP Libraries: SpaCy, NLTK',\r\n            'Data Preprocessing: TfidfVectorizer, MultiOutputClassifier',\r\n        ],\r\n        'Soft Skills': [\r\n            'Analytical Thinking',\r\n            'Communication',\r\n            'Team Collaboration',\r\n            'Problem Solving',\r\n            'Time Management',\r\n            'Adaptability',\r\n            'Leadership'\r\n        ]\r\n    };\r\n\r\n    const [currentSkillIndex, setCurrentSkillIndex] = useState(0);\r\n    const [currentCategoryIndex, setCurrentCategoryIndex] = useState(0);\r\n    const categories = Object.keys(skillsData);\r\n\r\n    useEffect(() => {\r\n        const totalSkills = categories.reduce((accum, category) => accum + skillsData[category].length, 0);\r\n        \r\n        const intervalId = setInterval(() => {\r\n            if (currentSkillIndex < totalSkills - 1) {\r\n                setCurrentSkillIndex(prev => prev + 1);\r\n            } else {\r\n                setCurrentSkillIndex(0); // Restart the slideshow\r\n                setCurrentCategoryIndex(prev => (prev + 1) % categories.length); // Change category\r\n            }\r\n        }, 3000); // Change slide every 3 seconds\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [currentSkillIndex]);\r\n\r\n    const getCurrentSkill = () => {\r\n        let cumulativeIndex = 0;\r\n        for (const category of categories) {\r\n            const items = skillsData[category];\r\n            if (currentSkillIndex < cumulativeIndex + items.length) {\r\n                return { skill: items[currentSkillIndex - cumulativeIndex], category };\r\n            }\r\n            cumulativeIndex += items.length;\r\n        }\r\n        return { skill: '', category: '' };\r\n    };\r\n\r\n    const { skill, category } = getCurrentSkill();\r\n\r\n    return (\r\n        <div className=\"slideshow-container\">\r\n            <h2 className=\"slideshow-title\">Skills Showcase</h2>\r\n            <div className=\"slideshow-content\">\r\n                <h3 className=\"category\">{category}</h3>\r\n                <p className=\"skill\">{skill}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkillsSlideshow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}