{"ast":null,"code":"// Import GSAP and ScrollTrigger (make sure GSAP is installed)\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\ngsap.registerPlugin(ScrollTrigger);\nexport function initScrollAnimations() {\n  // Fade in sections when scrolled into view\n  gsap.utils.toArray('.fade-in').forEach(section => {\n    gsap.from(section, {\n      opacity: 0,\n      y: 50,\n      duration: 1,\n      scrollTrigger: {\n        trigger: section,\n        start: 'top 80%',\n        end: 'top 30%',\n        scrub: true\n      }\n    });\n  });\n\n  // Slide in from left\n  gsap.utils.toArray('.slide-in-left').forEach(element => {\n    gsap.from(element, {\n      x: -100,\n      opacity: 0,\n      duration: 1,\n      scrollTrigger: {\n        trigger: element,\n        start: 'top 85%',\n        end: 'top 40%',\n        scrub: true\n      }\n    });\n  });\n\n  // Slide in from right\n  gsap.utils.toArray('.slide-in-right').forEach(element => {\n    gsap.from(element, {\n      x: 100,\n      opacity: 0,\n      duration: 1,\n      scrollTrigger: {\n        trigger: element,\n        start: 'top 85%',\n        end: 'top 40%',\n        scrub: true\n      }\n    });\n  });\n}\n\n// Vanilla JavaScript alternative\nexport function initScrollAnimationsVanilla() {\n  const options = {\n    threshold: 0.25\n  };\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('visible');\n      }\n    });\n  }, options);\n  document.querySelectorAll('.fade-in, .slide-in-left, .slide-in-right').forEach(el => {\n    observer.observe(el);\n  });\n}","map":{"version":3,"names":["gsap","ScrollTrigger","registerPlugin","initScrollAnimations","utils","toArray","forEach","section","from","opacity","y","duration","scrollTrigger","trigger","start","end","scrub","element","x","initScrollAnimationsVanilla","options","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","target","classList","add","document","querySelectorAll","el","observe"],"sources":["C:/Users/DELL/Desktop/PORTFOLIO/portfolio/src/animations/scrollAnimations.js"],"sourcesContent":["// Import GSAP and ScrollTrigger (make sure GSAP is installed)\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport function initScrollAnimations() {\r\n  // Fade in sections when scrolled into view\r\n  gsap.utils.toArray('.fade-in').forEach((section) => {\r\n    gsap.from(section, {\r\n      opacity: 0,\r\n      y: 50,\r\n      duration: 1,\r\n      scrollTrigger: {\r\n        trigger: section,\r\n        start: 'top 80%',\r\n        end: 'top 30%',\r\n        scrub: true,\r\n      },\r\n    });\r\n  });\r\n\r\n  // Slide in from left\r\n  gsap.utils.toArray('.slide-in-left').forEach((element) => {\r\n    gsap.from(element, {\r\n      x: -100,\r\n      opacity: 0,\r\n      duration: 1,\r\n      scrollTrigger: {\r\n        trigger: element,\r\n        start: 'top 85%',\r\n        end: 'top 40%',\r\n        scrub: true,\r\n      },\r\n    });\r\n  });\r\n\r\n  // Slide in from right\r\n  gsap.utils.toArray('.slide-in-right').forEach((element) => {\r\n    gsap.from(element, {\r\n      x: 100,\r\n      opacity: 0,\r\n      duration: 1,\r\n      scrollTrigger: {\r\n        trigger: element,\r\n        start: 'top 85%',\r\n        end: 'top 40%',\r\n        scrub: true,\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\n// Vanilla JavaScript alternative\r\nexport function initScrollAnimationsVanilla() {\r\n  const options = { threshold: 0.25 };\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('visible');\r\n      }\r\n    });\r\n  }, options);\r\n\r\n  document.querySelectorAll('.fade-in, .slide-in-left, .slide-in-right').forEach((el) => {\r\n    observer.observe(el);\r\n  });\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,aAAa,QAAQ,oBAAoB;AAElDD,IAAI,CAACE,cAAc,CAACD,aAAa,CAAC;AAElC,OAAO,SAASE,oBAAoBA,CAAA,EAAG;EACrC;EACAH,IAAI,CAACI,KAAK,CAACC,OAAO,CAAC,UAAU,CAAC,CAACC,OAAO,CAAEC,OAAO,IAAK;IAClDP,IAAI,CAACQ,IAAI,CAACD,OAAO,EAAE;MACjBE,OAAO,EAAE,CAAC;MACVC,CAAC,EAAE,EAAE;MACLC,QAAQ,EAAE,CAAC;MACXC,aAAa,EAAE;QACbC,OAAO,EAAEN,OAAO;QAChBO,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAhB,IAAI,CAACI,KAAK,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAACC,OAAO,CAAEW,OAAO,IAAK;IACxDjB,IAAI,CAACQ,IAAI,CAACS,OAAO,EAAE;MACjBC,CAAC,EAAE,CAAC,GAAG;MACPT,OAAO,EAAE,CAAC;MACVE,QAAQ,EAAE,CAAC;MACXC,aAAa,EAAE;QACbC,OAAO,EAAEI,OAAO;QAChBH,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAhB,IAAI,CAACI,KAAK,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAACC,OAAO,CAAEW,OAAO,IAAK;IACzDjB,IAAI,CAACQ,IAAI,CAACS,OAAO,EAAE;MACjBC,CAAC,EAAE,GAAG;MACNT,OAAO,EAAE,CAAC;MACVE,QAAQ,EAAE,CAAC;MACXC,aAAa,EAAE;QACbC,OAAO,EAAEI,OAAO;QAChBH,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASG,2BAA2BA,CAAA,EAAG;EAC5C,MAAMC,OAAO,GAAG;IAAEC,SAAS,EAAE;EAAK,CAAC;EACnC,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;IACrDA,OAAO,CAAClB,OAAO,CAAEmB,KAAK,IAAK;MACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC,EAAET,OAAO,CAAC;EAEXU,QAAQ,CAACC,gBAAgB,CAAC,2CAA2C,CAAC,CAACzB,OAAO,CAAE0B,EAAE,IAAK;IACrFV,QAAQ,CAACW,OAAO,CAACD,EAAE,CAAC;EACtB,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}